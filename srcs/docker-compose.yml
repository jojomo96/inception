version: "3.9"

services:
    mariadb:
        build:
            context: ./requirements/mariadb
        container_name: mariadb
        restart: always
        environment:
            WORDPRESS_DB_DATABASE: ${MYSQL_DATABASE}
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - mariadb_data:/var/lib/mysql
        networks:
            - my_network

    wordpress:
        build:
            context: ./requirements/wordpress
        container_name: wordpress
        restart: always
        depends_on:
            - mariadb
        environment:
            WORDPRESS_DB_HOST: mariadb
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
            WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
            WORDPRESS_SITE_URL: ${WORDPRESS_SITE_URL}
            WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER}
            WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD}
            WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL}
            WORDPRESS_TABLE_PREFIX: wp_
            WORDPRESS_SITE_TITLE: ${WORDPRESS_SITE_TITLE}
            WORDPRESS_DOMAIN: ${WORDPRESS_DOMAIN}
            WORDPRESS_USER: ${WORDPRESS_USER}
            WORDPRESS_USER_EMAIL: ${WORDPRESS_USER_EMAIL}
            WORDPRESS_USER_PASSWORD: ${WORDPRESS_USER_PASSWORD}
        volumes:
            - wordpress_data:/var/www/html/
        networks:
            - my_network

    nginx:
        build:
            context: ./requirements/nginx
        container_name: nginx
        restart: always
        ports:
            - "443:443"
        volumes:
            - wordpress_data:/var/www/html/
        networks:
            - my_network
        environment:
            WORDPRESS_DOMAIN: ${WORDPRESS_DOMAIN}

    redis:
        build:
            context: ./requirements/redis
            dockerfile: Dockerfile
        restart: always
        container_name: redis
        volumes:
            - redis_data:/data
        networks:
            - my_network
        depends_on:
            - wordpress

    ftp:
        build:
            context: ./requirements/ftp
            dockerfile: Dockerfile
        restart: always
        container_name: ftp
        volumes:
            - wordpress_data:/var/www/html
        environment:
            FTP_USER: ${FTP_USER}
            FTP_PASS: ${FTP_PASSWORD}
        depends_on:
            - wordpress
        ports:
            - "21:21"              # FTP Command Port
            - "20:20"              # FTP Data Port
            - "30000-30100:30000-30100"  # Passive Mode Ports
    adminer:
        build:
            context: ./requirements/adminer
            dockerfile: Dockerfile
        container_name: adminer
        restart: always
        depends_on:
            - mariadb
        networks:
            - my_network
        volumes:
            - adminer_data:/var/www/html
    stirlingpdf:
        build:
            context: ./requirements/stirlingpdf
            dockerfile: Dockerfile
        container_name: stirlingpdf
        restart: always
        networks:
            - my_network
        ports:
            - "8080:8080"

    staticside:
        build:
            context: ./requirements/staticside
            dockerfile: Dockerfile
        container_name: staticside
        restart: always
        ports:
            - "8081:80"  # Forward port 8081 on the host to port 80 in the container
        networks:
            - my_network


volumes:
    mariadb_data:
        driver: local
        driver_opts:
            type: none
            device: "/home/jmoritz/data/mariadb"
            o: bind
    wordpress_data:
        driver: local
        driver_opts:
            type: none
            device: "/home/jmoritz/data/wordpress"
            o: bind
    redis_data:
        driver: local
        driver_opts:
            type: none
            device: "/home/jmoritz/data/redis"
            o: bind
    adminer_data:
        driver: local
        driver_opts:
            type: none
            device: "/home/jmoritz/data/adminer"
            o: bind

networks:
    my_network:
